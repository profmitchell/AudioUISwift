{"hierarchy":{"paths":[["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI"],["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/AudioUIComponents"]]},"seeAlsoSections":[{"anchor":"Component-Library","title":"Component Library","generated":true,"identifiers":["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Buttons","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Knobs","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Sliders","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/DrumPads","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/XYPads","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/MotionControls","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/GroupComponents"]}],"sections":[],"kind":"article","abstract":[{"type":"text","text":"Visual feedback components for displaying audio levels, status information, and real-time data in professional audio interfaces."}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"AudioUI"}],"role":"collectionGroup","title":"Display Components"},"topicSections":[{"anchor":"Level-Meters","title":"Level Meters","identifiers":["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/ThemedLevelMeter","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/LevelMeter"]},{"anchor":"Status-Indicators","title":"Status Indicators","identifiers":["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/LED","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/StatusBar"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"AudioUIâ€™s display components provide essential visual feedback for audio applications. These components are designed to show real-time information clearly and efficiently, from simple LED indicators to complex multi-channel level meters."}],"type":"paragraph"},{"anchor":"Visual-Feedback-Components","level":2,"type":"heading","text":"Visual Feedback Components"},{"anchor":"Level-Meters","level":3,"type":"heading","text":"Level Meters"},{"inlineContent":[{"type":"text","text":"Level meters are fundamental to any audio interface, providing instant visual feedback about signal levels."}],"type":"paragraph"},{"code":["import AudioUI","","struct MixerChannelView: View {","    @State private var level: Double = 0.5","    @State private var peak: Double = 0.8","    ","    var body: some View {","        VStack {","            \/\/ Themed level meter with peak hold","            ThemedLevelMeter(","                level: level,","                peak: peak,","                label: \"CH 1\"","            )","            .frame(width: 40, height: 200)","            ","            \/\/ Basic level meter primitive","            LevelMeter(","                level: level,","                peak: peak,","                orientation: .vertical,","                size: CGSize(width: 30, height: 150)","            )","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"LED-Indicators","level":3,"type":"heading","text":"LED Indicators"},{"inlineContent":[{"type":"text","text":"Simple but effective status indicators for various audio states."}],"type":"paragraph"},{"code":["struct TransportControls: View {","    @State private var isPlaying = false","    @State private var isRecording = false","    @State private var hasSignal = true","    ","    var body: some View {","        HStack(spacing: 12) {","            \/\/ Play indicator","            LED(isOn: isPlaying, color: .green)","            ","            \/\/ Record indicator","            LED(isOn: isRecording, color: .red, size: 16)","            ","            \/\/ Signal presence indicator","            LED(isOn: hasSignal, color: .blue, size: 8)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Status-Displays","level":3,"type":"heading","text":"Status Displays"},{"inlineContent":[{"text":"Complex status information organized in clear, readable formats.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct AudioEngineStatus: View {","    var body: some View {","        StatusBar(items: [","            StatusBar.StatusItem(","                icon: \"waveform\",","                text: \"44.1kHz\",","                status: .normal","            ),","            StatusBar.StatusItem(","                icon: \"timer\",","                text: \"256 samples\",","                status: .normal","            ),","            StatusBar.StatusItem(","                icon: \"cpu\",","                text: \"23%\",","                status: level < 0.8 ? .normal : .warning","            )","        ])","    }","}"],"type":"codeListing"},{"text":"Component Catalog","anchor":"Component-Catalog","type":"heading","level":2},{"text":"ThemedLevelMeter","anchor":"ThemedLevelMeter","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"A professional-grade level meter with peak hold, scale markings, and theme integration."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Features:"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Peak hold with customizable decay","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"dB scale markings"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Clipping indicators"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Horizontal and vertical orientations"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Theme-aware styling","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Use Cases:","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Channel strips in mixing consoles","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Master output monitoring","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Input gain staging","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Multitrack recording interfaces"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"LevelMeter (Primitive)","anchor":"LevelMeter-Primitive","type":"heading","level":3},{"inlineContent":[{"text":"The core level meter component providing essential functionality without theming.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Features:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Real-time level display"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Optional peak indicators","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Customizable colors and sizing"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Efficient rendering for multiple instances"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","anchor":"LED","text":"LED"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simple LED indicator component for binary status display."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Features:"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On\/off states with smooth transitions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Customizable colors and sizes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Optimized for arrays of indicators","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Accessibility support","type":"text"}]}]}]},{"level":3,"type":"heading","anchor":"StatusBar","text":"StatusBar"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Organized display of multiple status items with consistent formatting."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Features:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Multiple status types (normal, warning, error)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Icon and text combination"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic spacing and alignment"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Responsive layout"}]}]}]},{"level":2,"type":"heading","anchor":"Advanced-Displays","text":"Advanced Displays"},{"level":3,"type":"heading","anchor":"Multi-Channel-Meters","text":"Multi-Channel Meters"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For complex audio routing scenarios:"}]},{"type":"codeListing","syntax":"swift","code":["struct MultichannelMeter: View {","    let channels: [AudioChannel]","    ","    var body: some View {","        HStack(spacing: 2) {","            ForEach(channels.indices, id: \\.self) { index in","                ThemedLevelMeter(","                    level: channels[index].level,","                    peak: channels[index].peak,","                    label: \"CH \\(index + 1)\"","                )","                .frame(width: 25, height: 200)","            }","        }","    }","}"]},{"level":3,"type":"heading","anchor":"Spectrum-Display-Integration","text":"Spectrum Display Integration"},{"type":"paragraph","inlineContent":[{"text":"Combining displays with MetalFX visualizers:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct SpectrumMeterCombo: View {","    var body: some View {","        VStack {","            \/\/ Real-time spectrum analysis","            SpectrumVisualizer(","                intensity: audioEngine.spectrumIntensity,","                barCount: 32","            )","            .frame(height: 100)","            ","            \/\/ Traditional level meter","            ThemedLevelMeter(","                level: audioEngine.masterLevel,","                peak: audioEngine.masterPeak,","                label: \"MASTER\"","            )","            .frame(width: 60, height: 150)","        }","    }","}"]},{"level":2,"type":"heading","anchor":"Performance-Considerations","text":"Performance Considerations"},{"level":3,"type":"heading","anchor":"Efficient-Updates","text":"Efficient Updates"},{"type":"paragraph","inlineContent":[{"text":"Display components are optimized for real-time updates:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Level meters use efficient drawing algorithms","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"LED components batch updates for arrays","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Status displays only redraw when values change","type":"text"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","anchor":"Memory-Usage","text":"Memory Usage"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Primitive components have minimal memory footprint"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Themed components cache rendering resources"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Large meter arrays use view recycling"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Design-Guidelines","text":"Design Guidelines"},{"level":3,"type":"heading","anchor":"Visual-Hierarchy","text":"Visual Hierarchy"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Use size and color to indicate importance","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Group related status indicators","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maintain consistent spacing and alignment"}]}]}]},{"level":3,"type":"heading","anchor":"Color-Coding","text":"Color Coding"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Green: Normal operation, good signal levels"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Yellow\/Orange: Caution, approaching limits"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Red: Warning, clipping, or error states"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Blue: Information, special states"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","anchor":"Accessibility","text":"Accessibility"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"All displays support high contrast modes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"LED indicators include text alternatives","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Status information is available to screen readers"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Integration-Examples","text":"Integration Examples"},{"level":3,"type":"heading","anchor":"Professional-Mixing-Console","text":"Professional Mixing Console"},{"type":"codeListing","syntax":"swift","code":["struct MixingConsole: View {","    @StateObject private var mixer = AudioMixer()","    ","    var body: some View {","        HStack {","            ForEach(mixer.channels) { channel in","                VStack {","                    \/\/ Channel controls","                    ChannelStrip(channel: channel)","                    ","                    \/\/ Level display","                    ThemedLevelMeter(","                        level: channel.level,","                        peak: channel.peak,","                        label: channel.name","                    )","                    .frame(width: 40, height: 300)","                }","            }","            ","            \/\/ Master section","            VStack {","                StatusBar(items: mixer.systemStatus)","                ","                ThemedLevelMeter(","                    level: mixer.masterLevel,","                    peak: mixer.masterPeak,","                    label: \"MASTER\"","                )","                .frame(width: 60, height: 300)","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Display components form the visual feedback backbone of professional audio interfaces, providing users with immediate, clear information about their audio systemsâ€™ state and performance."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/audioui\/displays"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Displays"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://audiouiswift.AudioUI/documentation/AudioUI":{"kind":"symbol","abstract":[{"type":"text","text":"The ultimate SwiftUI framework for professional audio interface development."}],"identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI","role":"collection","type":"topic","title":"AudioUI","url":"\/documentation\/audioui"},"doc://audiouiswift.AudioUI/documentation/AudioUI/GroupComponents":{"role":"collectionGroup","type":"topic","abstract":[{"type":"text","text":"Container and layout components for organizing audio interface elements into logical groups and hierarchical structures."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/GroupComponents","url":"\/documentation\/audioui\/groupcomponents","title":"Group Components"},"doc://audiouiswift.AudioUI/documentation/AudioUI/DrumPads":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Velocity-sensitive percussion controls for drum machines, samplers, and rhythmic interfaces."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/DrumPads","url":"\/documentation\/audioui\/drumpads","title":"DrumPads"},"doc://audiouiswift.AudioUI/documentation/AudioUI/AudioUIComponents":{"role":"collectionGroup","type":"topic","title":"AudioUIComponents","url":"\/documentation\/audioui\/audiouicomponents","abstract":[{"type":"text","text":"Production-ready audio interface components with hardware-inspired design and real-time performance."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/AudioUIComponents"},"doc://audiouiswift.AudioUI/documentation/AudioUI/ThemedLevelMeter":{"title":"ThemedLevelMeter","navigatorTitle":[{"kind":"identifier","text":"ThemedLevelMeter"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThemedLevelMeter"}],"role":"symbol","url":"\/documentation\/audioui\/themedlevelmeter","kind":"symbol","type":"topic","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/ThemedLevelMeter","abstract":[]},"doc://audiouiswift.AudioUI/documentation/AudioUI/Buttons":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Tactile button components for audio interface controls with professional behavior and styling."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Buttons","url":"\/documentation\/audioui\/buttons","title":"Buttons"},"doc://audiouiswift.AudioUI/documentation/AudioUI/LevelMeter":{"role":"symbol","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/LevelMeter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LevelMeter","kind":"identifier"}],"type":"topic","title":"LevelMeter","url":"\/documentation\/audioui\/levelmeter","abstract":[],"navigatorTitle":[{"text":"LevelMeter","kind":"identifier"}],"kind":"symbol"},"doc://audiouiswift.AudioUI/documentation/AudioUI/MotionControls":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Gesture-based and motion-sensitive controls for expressive audio interfaces."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/MotionControls","url":"\/documentation\/audioui\/motioncontrols","title":"MotionControls"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Knobs":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Professional rotary controls with authentic hardware behavior and stunning visual design."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Knobs","url":"\/documentation\/audioui\/knobs","title":"Knobs"},"doc://audiouiswift.AudioUI/documentation/AudioUI/StatusBar":{"identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/StatusBar","url":"\/documentation\/audioui\/statusbar","title":"StatusBar","kind":"symbol","navigatorTitle":[{"text":"StatusBar","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StatusBar","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Sliders":{"role":"article","type":"topic","kind":"article","abstract":[{"type":"text","text":"Linear control components for precise parameter adjustment with professional fader behavior."}],"identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Sliders","url":"\/documentation\/audioui\/sliders","title":"Sliders"},"doc://audiouiswift.AudioUI/documentation/AudioUI/LED":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LED"}],"url":"\/documentation\/audioui\/led","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/LED","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LED"}],"title":"LED"},"doc://audiouiswift.AudioUI/documentation/AudioUI/XYPads":{"role":"article","type":"topic","abstract":[{"text":"Two-dimensional control surfaces for spatial parameter manipulation and expressive audio control.","type":"text"}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/XYPads","url":"\/documentation\/audioui\/xypads","title":"XYPads"}}}