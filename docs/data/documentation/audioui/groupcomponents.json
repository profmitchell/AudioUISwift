{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"AudioUIâ€™s group components provide the structural foundation for complex audio interfaces. They organize individual controls and displays into meaningful clusters, creating intuitive layouts that mirror real-world hardware and professional software workflows."}]},{"anchor":"Layout-Containers","type":"heading","level":2,"text":"Layout Containers"},{"anchor":"Channel-Strips","type":"heading","level":3,"text":"Channel Strips"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The fundamental building block of mixing interfaces, combining multiple controls into a vertical layout representing a single audio channel."}]},{"syntax":"swift","type":"codeListing","code":["import AudioUI","","struct ChannelStrip: View {","    @StateObject private var channel = AudioChannel()","    ","    var body: some View {","        VStack(spacing: 8) {","            \/\/ Input section","            AudioUIGroup(\"INPUT\") {","                InsetNeumorphicKnob(","                    value: $channel.gain,","                    label: \"GAIN\"","                )","                ","                ToggleButton(","                    isOn: $channel.phantomPower,","                    label: \"48V\"","                )","            }","            ","            \/\/ EQ section","            AudioUIGroup(\"EQ\") {","                HStack {","                    InsetNeumorphicKnob(","                        value: $channel.highFreq,","                        label: \"HIGH\"","                    )","                    InsetNeumorphicKnob(","                        value: $channel.midFreq,","                        label: \"MID\"","                    )","                    InsetNeumorphicKnob(","                        value: $channel.lowFreq,","                        label: \"LOW\"","                    )","                }","            }","            ","            \/\/ Output section","            AudioUIGroup(\"OUTPUT\") {","                VerticalInsetSlider(","                    value: $channel.faderLevel,","                    label: \"LEVEL\"","                )","                .frame(height: 200)","                ","                ThemedLevelMeter(","                    level: channel.level,","                    peak: channel.peak,","                    label: \"METER\"","                )","                .frame(width: 30, height: 200)","            }","        }","        .frame(width: 120)","    }","}"]},{"anchor":"Effect-Racks","type":"heading","level":3,"text":"Effect Racks"},{"type":"paragraph","inlineContent":[{"text":"Modular containers for organizing audio processing effects with consistent spacing and visual grouping.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct EffectRack: View {","    @StateObject private var effectChain = AudioEffectChain()","    ","    var body: some View {","        VStack(spacing: 16) {","            ForEach(effectChain.effects) { effect in","                EffectModule(effect: effect)","                    .audioUIGrouped(\"FX \\(effect.id)\")","            }","            ","            \/\/ Add effect button","            CircularButton(","                action: effectChain.addEffect,","                icon: \"plus\"","            )","        }","        .audioUIGrouped(\"EFFECT RACK\")","    }","}","","struct EffectModule: View {","    let effect: AudioEffect","    ","    var body: some View {","        HStack {","            \/\/ Effect controls based on type","            switch effect.type {","            case .reverb:","                ReverbControls(effect: effect)","            case .delay:","                DelayControls(effect: effect)","            case .chorus:","                ChorusControls(effect: effect)","            }","            ","            \/\/ Bypass button","            ToggleButton(","                isOn: Binding(","                    get: { !effect.isBypassed },","                    set: { effect.isBypassed = !$0 }","                ),","                label: \"ON\"","            )","        }","    }","}"]},{"anchor":"Transport-Controls","type":"heading","level":3,"text":"Transport Controls"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Grouped playback and recording controls that function as a cohesive unit."}]},{"syntax":"swift","type":"codeListing","code":["struct TransportSection: View {","    @StateObject private var transport = AudioTransport()","    ","    var body: some View {","        AudioUIGroup(\"TRANSPORT\") {","            HStack(spacing: 12) {","                \/\/ Main transport buttons","                CircularButton(","                    action: transport.rewind,","                    icon: \"backward.end\"","                )","                ","                CircularButton(","                    action: transport.play,","                    icon: transport.isPlaying ? \"pause\" : \"play\"","                )","                .highlighted(transport.isPlaying)","                ","                CircularButton(","                    action: transport.record,","                    icon: \"record.circle\"","                )","                .highlighted(transport.isRecording)","                ","                CircularButton(","                    action: transport.stop,","                    icon: \"stop\"","                )","                ","                CircularButton(","                    action: transport.fastForward,","                    icon: \"forward.end\"","                )","            }","            ","            \/\/ Transport status","            HStack {","                LED(isOn: transport.isPlaying, color: .green)","                Text(\"PLAY\")","                ","                Spacer()","                ","                LED(isOn: transport.isRecording, color: .red)","                Text(\"REC\")","            }","        }","    }","}"]},{"anchor":"Component-Catalog","type":"heading","level":2,"text":"Component Catalog"},{"anchor":"AudioUIGroup","type":"heading","level":3,"text":"AudioUIGroup"},{"type":"paragraph","inlineContent":[{"text":"The primary grouping container that provides visual organization and consistent spacing.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Features:"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Titled sections with clear visual separation","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatic spacing and padding","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Theme-aware styling"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Collapsible sections (optional)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use Cases:"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Channel strip sections (EQ, Dynamics, etc.)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Effect parameter groupings"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Control panel organization"}]}]}],"type":"unorderedList"},{"anchor":"ChannelStrip","type":"heading","level":3,"text":"ChannelStrip"},{"type":"paragraph","inlineContent":[{"text":"A specialized vertical container optimized for audio channel layouts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Features:"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Predefined sections for common channel elements","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Automatic spacing for faders and meters","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Responsive width handling","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Label positioning optimization","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Use Cases:"}]}]},{"items":[{"content":[{"inlineContent":[{"text":"Mixing console channels","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Multi-track recorder interfaces","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Live sound control surfaces","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"EffectRack","type":"heading","level":3,"text":"EffectRack"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A dynamic container for chaining audio processing modules."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Features:","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Drag-and-drop reordering"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add\/remove effect slots"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bypass state visualization"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Signal flow indicators","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use Cases:"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Plugin hosts"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Guitar amp simulators"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Mastering suites","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"ControlPanel","type":"heading","level":3,"text":"ControlPanel"},{"type":"paragraph","inlineContent":[{"text":"A flexible grid-based container for organizing related controls.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Features:","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatic grid layout","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Responsive column counts","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Group labeling"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Consistent control spacing"}]}]}],"type":"unorderedList"},{"anchor":"Advanced-Grouping-Patterns","type":"heading","level":2,"text":"Advanced Grouping Patterns"},{"anchor":"Tabbed-Interfaces","type":"heading","level":3,"text":"Tabbed Interfaces"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For complex interfaces with multiple functional areas:"}]},{"syntax":"swift","type":"codeListing","code":["struct SynthesizerInterface: View {","    @State private var selectedTab = 0","    ","    var body: some View {","        VStack {","            \/\/ Tab selector","            HStack {","                ForEach(0..<3) { index in","                    TabButton(","                        isSelected: selectedTab == index,","                        title: [\"OSC\", \"FILTER\", \"AMP\"][index]","                    ) {","                        selectedTab = index","                    }","                }","            }","            ","            \/\/ Tab content","            Group {","                switch selectedTab {","                case 0:","                    OscillatorControls()","                case 1:","                    FilterControls()","                case 2:","                    AmplifierControls()","                default:","                    EmptyView()","                }","            }","            .audioUIGrouped()","        }","    }","}"]},{"anchor":"Hierarchical-Organization","type":"heading","level":3,"text":"Hierarchical Organization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For deeply nested control structures:"}]},{"syntax":"swift","type":"codeListing","code":["struct MasterSection: View {","    var body: some View {","        AudioUIGroup(\"MASTER\") {","            \/\/ Primary controls","            HStack {","                InsetNeumorphicKnob(","                    value: $masterGain,","                    label: \"GAIN\"","                )","                ","                \/\/ Sub-group for monitoring","                AudioUIGroup(\"MONITOR\") {","                    VStack {","                        ToggleButton(","                            isOn: $monitorEnabled,","                            label: \"ON\"","                        )","                        ","                        InsetNeumorphicKnob(","                            value: $monitorLevel,","                            label: \"LEVEL\"","                        )","                    }","                }","            }","            ","            \/\/ Output meters","            HStack {","                ThemedLevelMeter(","                    level: leftLevel,","                    peak: leftPeak,","                    label: \"L\"","                )","                ","                ThemedLevelMeter(","                    level: rightLevel,","                    peak: rightPeak,","                    label: \"R\"","                )","            }","        }","    }","}"]},{"anchor":"Performance-Considerations","type":"heading","level":2,"text":"Performance Considerations"},{"anchor":"View-Hierarchy-Optimization","type":"heading","level":3,"text":"View Hierarchy Optimization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Group components are designed to minimize view hierarchy depth while maintaining clear organization:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Efficient container views that donâ€™t add unnecessary layers"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Lazy loading for large collections of grouped elements","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"View recycling for dynamic content","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Update-Efficiency","type":"heading","level":3,"text":"Update Efficiency"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Group containers batch updates to child components"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Selective redrawing based on changed content"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optimized layout calculations"}]}]}],"type":"unorderedList"},{"anchor":"Design-Guidelines","type":"heading","level":2,"text":"Design Guidelines"},{"anchor":"Visual-Hierarchy","type":"heading","level":3,"text":"Visual Hierarchy"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Use consistent grouping patterns throughout the interface"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Vary group sizes to indicate relative importance"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Maintain clear visual separation between groups","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Spacing-and-Alignment","type":"heading","level":3,"text":"Spacing and Alignment"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow consistent spacing rules within and between groups"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Align related elements across different groups"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use white space effectively to prevent cramped layouts","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Labeling","type":"heading","level":3,"text":"Labeling"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Provide clear, concise group labels"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use consistent label positioning","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Consider internationalization for label text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Integration-Examples","type":"heading","level":2,"text":"Integration Examples"},{"anchor":"Professional-Mixing-Console","type":"heading","level":3,"text":"Professional Mixing Console"},{"syntax":"swift","type":"codeListing","code":["struct MixingConsoleView: View {","    @StateObject private var console = MixingConsole()","    ","    var body: some View {","        HStack {","            \/\/ Input channels","            ScrollView(.horizontal) {","                HStack {","                    ForEach(console.inputChannels) { channel in","                        ChannelStrip(channel: channel)","                    }","                }","            }","            ","            \/\/ Master section","            VStack {","                EffectRack(effects: console.masterEffects)","                ","                AudioUIGroup(\"MASTER OUTPUT\") {","                    StereoLevelMeter(","                        leftLevel: console.masterLeft,","                        rightLevel: console.masterRight","                    )","                    ","                    InsetNeumorphicKnob(","                        value: $console.masterGain,","                        label: \"MASTER\"","                    )","                }","            }","        }","    }","}"]},{"anchor":"Synthesizer-Workstation","type":"heading","level":3,"text":"Synthesizer Workstation"},{"syntax":"swift","type":"codeListing","code":["struct SynthWorkstation: View {","    var body: some View {","        VStack {","            \/\/ Performance controls","            AudioUIGroup(\"PERFORMANCE\") {","                HStack {","                    MotionXYPad(","                        x: $performanceX,","                        y: $performanceY,","                        label: \"EXPRESSION\"","                    )","                    ","                    VStack {","                        CircularSlider(","                            value: $modWheel,","                            label: \"MOD\"","                        )","                        ","                        CircularSlider(","                            value: $pitchBend,","                            label: \"PITCH\"","                        )","                    }","                }","            }","            ","            \/\/ Sound generation","            HStack {","                OscillatorSection()","                FilterSection()","                AmplifierSection()","            }","            ","            \/\/ Effects and output","            HStack {","                EffectRack(effects: synthEffects)","                OutputSection()","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Group components create the organizational backbone of professional audio interfaces, enabling complex functionality while maintaining intuitive, logical layouts that users can navigate efficiently.","type":"text"}]}]}],"sections":[],"seeAlsoSections":[{"title":"Component Library","identifiers":["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Buttons","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Knobs","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Sliders","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/DrumPads","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/XYPads","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/MotionControls","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Displays"],"generated":true,"anchor":"Component-Library"}],"kind":"article","abstract":[{"type":"text","text":"Container and layout components for organizing audio interface elements into logical groups and hierarchical structures."}],"hierarchy":{"paths":[["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI"],["doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI","doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/AudioUIComponents"]]},"variants":[{"paths":["\/documentation\/audioui\/groupcomponents"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/GroupComponents"},"metadata":{"role":"collectionGroup","modules":[{"name":"AudioUI"}],"title":"Group Components"},"references":{"doc://audiouiswift.AudioUI/documentation/AudioUI/AudioUIComponents":{"role":"collectionGroup","type":"topic","title":"AudioUIComponents","url":"\/documentation\/audioui\/audiouicomponents","abstract":[{"type":"text","text":"Production-ready audio interface components with hardware-inspired design and real-time performance."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/AudioUIComponents"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Sliders":{"role":"article","type":"topic","kind":"article","abstract":[{"type":"text","text":"Linear control components for precise parameter adjustment with professional fader behavior."}],"identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Sliders","url":"\/documentation\/audioui\/sliders","title":"Sliders"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Displays":{"abstract":[{"text":"Visual feedback components for displaying audio levels, status information, and real-time data in professional audio interfaces.","type":"text"}],"url":"\/documentation\/audioui\/displays","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Displays","title":"Display Components","role":"collectionGroup","type":"topic","kind":"article"},"doc://audiouiswift.AudioUI/documentation/AudioUI/MotionControls":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Gesture-based and motion-sensitive controls for expressive audio interfaces."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/MotionControls","url":"\/documentation\/audioui\/motioncontrols","title":"MotionControls"},"doc://audiouiswift.AudioUI/documentation/AudioUI":{"kind":"symbol","abstract":[{"type":"text","text":"The ultimate SwiftUI framework for professional audio interface development."}],"identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI","role":"collection","type":"topic","title":"AudioUI","url":"\/documentation\/audioui"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Buttons":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Tactile button components for audio interface controls with professional behavior and styling."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Buttons","url":"\/documentation\/audioui\/buttons","title":"Buttons"},"doc://audiouiswift.AudioUI/documentation/AudioUI/Knobs":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Professional rotary controls with authentic hardware behavior and stunning visual design."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/Knobs","url":"\/documentation\/audioui\/knobs","title":"Knobs"},"doc://audiouiswift.AudioUI/documentation/AudioUI/DrumPads":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Velocity-sensitive percussion controls for drum machines, samplers, and rhythmic interfaces."}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/DrumPads","url":"\/documentation\/audioui\/drumpads","title":"DrumPads"},"doc://audiouiswift.AudioUI/documentation/AudioUI/XYPads":{"role":"article","type":"topic","abstract":[{"text":"Two-dimensional control surfaces for spatial parameter manipulation and expressive audio control.","type":"text"}],"kind":"article","identifier":"doc:\/\/audiouiswift.AudioUI\/documentation\/AudioUI\/XYPads","url":"\/documentation\/audioui\/xypads","title":"XYPads"}}}